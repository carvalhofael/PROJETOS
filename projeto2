from fastapi import FastAPI, Query
from fastapi.responses import JSONResponse
from sqlalchemy.exc import IntegrityError
from fastapi_pagination import Page, add_pagination, paginate

app = FastAPI()

@app.get("/atletas", response_model=Page[AtletaSchema])
def listar_atletas(nome: str = Query(None), cpf: str = Query(None)):
    query = db.query(Atleta)
    if nome:
        query = query.filter(Atleta.nome.ilike(f"%{nome}%"))
    if cpf:
        query = query.filter(Atleta.cpf == cpf)
    return paginate(query.all())

@app.post("/atletas")
def criar_atleta(atleta: AtletaCreate):
    try:
        novo_atleta = Atleta(**atleta.dict())
        db.add(novo_atleta)
        db.commit()
        db.refresh(novo_atleta)
        return novo_atleta
    except IntegrityError:
        db.rollback()
        return JSONResponse(
            status_code=303,
            content={"detail": f"JÃ¡ existe um atleta cadastrado com o cpf: {atleta.cpf}"}
        )

add_pagination(app)